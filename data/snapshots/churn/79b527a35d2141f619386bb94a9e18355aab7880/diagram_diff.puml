@startuml
skinparam classAttributeIconSize 0
left to right direction
package "Classes (Removed · Unchanged · Added)" <<Rectangle>> {
  class AbstractResourceController <<REMOVED>> #LightSalmon {
  }
  class BaseEntity <<REMOVED>> #LightSalmon {
    + id: Integer
  }
  class CallMonitoringAspect <<REMOVED>> #LightSalmon {
    + enabled: boolean
    + callCount: int
    + accumulatedCallTime: long
  }
  class ClientsServiceApplication <<REMOVED>> #LightSalmon {
  }
  class NamedEntity <<REMOVED>> #LightSalmon {
    + name: String
  }
  class OwnerService <<REMOVED>> #LightSalmon {
    + ownerRepository: OwnerRepository
  }
  class Person <<REMOVED>> #LightSalmon {
    + firstName: String
    + lastName: String
  }
  class PetService <<REMOVED>> #LightSalmon {
    + petRepository: PetRepository
  }
  class PetValidator <<REMOVED>> #LightSalmon {
  }
  class PetclinicProperties <<REMOVED>> #LightSalmon {
    + database: String
  }
  class VetService <<REMOVED>> #LightSalmon {
    + vetRepository: VetRepository
  }
  class Vets <<REMOVED>> #LightSalmon {
    + vets: List
  }
  class VisitService <<REMOVED>> #LightSalmon {
    + visitRepository: VisitRepository
  }
  class WebConfig <<REMOVED>> #LightSalmon {
  }
  class CacheConfig {
  }
  class ConfigServerApplication {
  }
  class DiscoveryServerApplication {
  }
  class Owner {
    + id: Integer
    + firstName: String
    + lastName: String
    + address: String
    + city: String
    + telephone: String
    + pets: Set
  }
  interface OwnerRepository {
  }
  class OwnerResource {
    + ownerRepository: OwnerRepository
    + ownerEntityMapper: OwnerEntityMapper
  }
  class Pet {
    + id: Integer
    + name: String
    + birthDate: Date
    + type: PetType
    + owner: Owner
  }
  interface PetRepository {
  }
  class PetResource {
    + petRepository: PetRepository
    + ownerRepository: OwnerRepository
  }
  class PetType {
    + id: Integer
    + name: String
  }
  class Specialty {
    + id: Integer
    + name: String
  }
  class Vet {
    + id: Integer
    + firstName: String
    + lastName: String
    + specialties: Set
  }
  interface VetRepository {
  }
  class VetResource {
    + vetRepository: VetRepository
  }
  class VetsServiceApplication {
  }
  class Visit {
    + id: Integer
    + date: Date
    + description: String
    + petId: int
  }
  interface VisitRepository {
  }
  class VisitResource {
    + visitRepository: VisitRepository
  }
  class VisitsServiceApplication {
  }
  class AIBeanConfiguration <<ADDED>> #LightGreen {
  }
  class AIDataProvider <<ADDED>> #LightGreen {
    + vectorStore: VectorStore
    + ownersHostname: String
    + webClient: WebClient
  }
  class ApiGatewayApplication <<ADDED>> #LightGreen {
    + indexHtml: Resource
  }
  class ApiGatewayController <<ADDED>> #LightGreen {
    + customersServiceClient: CustomersServiceClient
    + visitsServiceClient: VisitsServiceClient
    + cbFactory: ReactiveCircuitBreakerFactory
  }
  class CustomersServiceApplication <<ADDED>> #LightGreen {
  }
  class CustomersServiceClient <<ADDED>> #LightGreen {
    + webClientBuilder: WebClient
  }
  class FallbackController <<ADDED>> #LightGreen {
  }
  class GenAIServiceApplication <<ADDED>> #LightGreen {
  }
  interface Mapper <<ADDED>> #LightGreen {
  }
  class MetricConfig <<ADDED>> #LightGreen {
  }
  class OwnerDetails <<ADDED>> #LightGreen {
    + id: int
    + firstName: String
    + lastName: String
    + address: String
    + city: String
    + telephone: String
    + pets: List
  }
  class OwnerEntityMapper <<ADDED>> #LightGreen {
  }
  class PetDetails <<ADDED>> #LightGreen {
    + id: int
    + name: String
    + birthDate: String
    + type: PetType
    + visits: List
  }
  class ResourceNotFoundException <<ADDED>> #LightGreen {
  }
  class SpringBootAdminApplication <<ADDED>> #LightGreen {
  }
  class VectorStoreController <<ADDED>> #LightGreen {
    + logger: Logger
    + vectorStore: VectorStore
    + webClient: WebClient
  }
  class VetsProperties <<ADDED>> #LightGreen {
    + cache: Cache
  }
  class VisitDetails <<ADDED>> #LightGreen {
    + id: Integer
    + petId: Integer
    + date: String
    + description: String
  }
  class Visits <<ADDED>> #LightGreen {
    + items: List
  }
  class VisitsServiceClient <<ADDED>> #LightGreen {
    + hostname: String
    + webClientBuilder: WebClient
  }
}
BaseEntity <|--[#red,dotted] NamedEntity
BaseEntity <|--[#red,dotted] Person
BaseEntity <|--[#red,dotted] Visit
NamedEntity <|--[#red,dotted] Pet
NamedEntity <|--[#red,dotted] PetType
NamedEntity <|--[#red,dotted] Specialty
OwnerResource -[#red,dotted]-> OwnerService
OwnerService -[#red,dotted]-> OwnerRepository
Person <|--[#red,dotted] Owner
Person <|--[#red,dotted] Vet
PetResource -[#red,dotted]-> OwnerService
PetResource -[#red,dotted]-> PetService
PetService -[#red,dotted]-> PetRepository
VetResource -[#red,dotted]-> VetService
VetService -[#red,dotted]-> VetRepository
VisitResource -[#red,dotted]-> VisitService
VisitService -[#red,dotted]-> VisitRepository
Pet --> Owner
Pet --> PetType
ApiGatewayController -[#green,dotted]-> CustomersServiceClient
ApiGatewayController -[#green,dotted]-> VisitsServiceClient
Mapper <|..[#green,dotted] OwnerEntityMapper
OwnerResource -[#green,dotted]-> OwnerEntityMapper
OwnerResource -[#green,dotted]-> OwnerRepository
PetDetails -[#green,dotted]-> PetType
PetResource -[#green,dotted]-> OwnerRepository
PetResource -[#green,dotted]-> PetRepository
VetResource -[#green,dotted]-> VetRepository
VisitResource -[#green,dotted]-> VisitRepository
@enduml